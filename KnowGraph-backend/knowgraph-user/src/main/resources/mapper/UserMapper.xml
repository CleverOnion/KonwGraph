<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cleveronion.knowgraph.user.mapper.UserMapper">

    <resultMap type="com.cleveronion.knowgraph.user.domain.entity.User" id="UserResult">
        <id     property="id"           column="id"           />
        <result property="username"     column="username"     />
        <result property="passwordHash" column="password_hash"/>
        <result property="email"        column="email"        />
        <result property="nickname"     column="nickname"     />
        <result property="avatarUrl"    column="avatar_url"   />
        <result property="bio"          column="bio"          />
        <result property="points"       column="points"       />
        <result property="role"         column="role"         />
        <result property="status"       column="status"       />
        <result property="createdAt"    column="created_at"   />
        <result property="updatedAt"    column="updated_at"   />
        <result property="deletedAt"    column="deleted_at"   />
    </resultMap>

    <sql id="selectUserVo">
        select id, username, password_hash, email, nickname, avatar_url, bio, points, role, status, created_at, updated_at, deleted_at
        from users
    </sql>

    <select id="selectByUsername" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where username = #{username} and deleted_at is null
    </select>

    <select id="selectByEmail" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where email = #{email} and deleted_at is null
    </select>
    
    <select id="selectById" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where id = #{id} and deleted_at is null
    </select>

    <insert id="insert" parameterType="com.cleveronion.knowgraph.user.domain.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into users(
            <if test="username != null and username != ''">username,</if>
            <if test="passwordHash != null and passwordHash != ''">password_hash,</if>
            <if test="email != null and email != ''">email,</if>
            <if test="nickname != null and nickname != ''">nickname,</if>
            <if test="avatarUrl != null and avatarUrl != ''">avatar_url,</if>
            <if test="bio != null and bio != ''">bio,</if>
            <if test="points != null">points,</if>
            <if test="role != null">role,</if>
            <if test="status != null">status,</if>
            created_at,
            updated_at
        )values(
            <if test="username != null and username != ''">#{username},</if>
            <if test="passwordHash != null and passwordHash != ''">#{passwordHash},</if>
            <if test="email != null and email != ''">#{email},</if>
            <if test="nickname != null and nickname != ''">#{nickname},</if>
            <if test="avatarUrl != null and avatarUrl != ''">#{avatarUrl},</if>
            <if test="bio != null and bio != ''">#{bio},</if>
            <if test="points != null">#{points},</if>
            <if test="role != null">#{role},</if>
            <if test="status != null">#{status},</if>
            now(),
            now()
        )
    </insert>

    <select id="selectByIds" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where id IN
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
        and deleted_at is null
    </select>

    <select id="selectListByPage" resultMap="UserResult">
        SELECT * FROM users
        ORDER BY created_at DESC
        LIMIT #{pageSize} OFFSET ${(pageNum - 1) * pageSize}
    </select>

    <select id="countTotal" resultType="java.lang.Long">
        SELECT count(*) FROM users
    </select>

    <update id="updateProfile" parameterType="com.cleveronion.knowgraph.user.domain.entity.User">
        UPDATE users
        <set>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl},
            </if>
            <if test="bio != null">
                bio = #{bio},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            updated_at = NOW()
        </set>
        WHERE id = #{id}
    </update>

</mapper>